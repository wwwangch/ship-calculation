// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calculation.proto

package com.iscas.biz.calculation.grpc;

/**
 * Protobuf type {@code com.iscas.biz.calculation.grpc.Buoyant}
 */
public  final class Buoyant extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.iscas.biz.calculation.grpc.Buoyant)
    BuoyantOrBuilder {
  // Use Buoyant.newBuilder() to construct.
  private Buoyant(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Buoyant() {
    floatforce_ = 0D;
    floatxpos_ = 0D;
    da_ = 0D;
    dm_ = 0D;
    df_ = 0D;
    biasf_ = 0D;
    biasx_ = 0D;
    index_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Buoyant(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 9: {

            floatforce_ = input.readDouble();
            break;
          }
          case 17: {

            floatxpos_ = input.readDouble();
            break;
          }
          case 25: {

            da_ = input.readDouble();
            break;
          }
          case 33: {

            dm_ = input.readDouble();
            break;
          }
          case 41: {

            df_ = input.readDouble();
            break;
          }
          case 49: {

            biasf_ = input.readDouble();
            break;
          }
          case 57: {

            biasx_ = input.readDouble();
            break;
          }
          case 64: {

            index_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.iscas.biz.calculation.grpc.CalculationProto.internal_static_com_iscas_biz_calculation_grpc_Buoyant_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.iscas.biz.calculation.grpc.CalculationProto.internal_static_com_iscas_biz_calculation_grpc_Buoyant_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.iscas.biz.calculation.grpc.Buoyant.class, com.iscas.biz.calculation.grpc.Buoyant.Builder.class);
  }

  public static final int FLOATFORCE_FIELD_NUMBER = 1;
  private double floatforce_;
  /**
   * <pre>
   *浮力
   * </pre>
   *
   * <code>double floatforce = 1;</code>
   */
  public double getFloatforce() {
    return floatforce_;
  }

  public static final int FLOATXPOS_FIELD_NUMBER = 2;
  private double floatxpos_;
  /**
   * <pre>
   *浮力位置
   * </pre>
   *
   * <code>double floatxpos = 2;</code>
   */
  public double getFloatxpos() {
    return floatxpos_;
  }

  public static final int DA_FIELD_NUMBER = 3;
  private double da_;
  /**
   * <pre>
   *船尾吃水
   * </pre>
   *
   * <code>double da = 3;</code>
   */
  public double getDa() {
    return da_;
  }

  public static final int DM_FIELD_NUMBER = 4;
  private double dm_;
  /**
   * <pre>
   *船中吃水
   * </pre>
   *
   * <code>double dm = 4;</code>
   */
  public double getDm() {
    return dm_;
  }

  public static final int DF_FIELD_NUMBER = 5;
  private double df_;
  /**
   * <pre>
   *船首吃水
   * </pre>
   *
   * <code>double df = 5;</code>
   */
  public double getDf() {
    return df_;
  }

  public static final int BIASF_FIELD_NUMBER = 6;
  private double biasf_;
  /**
   * <pre>
   *浮力偏差 重量平衡精度
   * </pre>
   *
   * <code>double biasf = 6;</code>
   */
  public double getBiasf() {
    return biasf_;
  }

  public static final int BIASX_FIELD_NUMBER = 7;
  private double biasx_;
  /**
   * <pre>
   *浮力位置偏差 重心平衡精度
   * </pre>
   *
   * <code>double biasx = 7;</code>
   */
  public double getBiasx() {
    return biasx_;
  }

  public static final int INDEX_FIELD_NUMBER = 8;
  private int index_;
  /**
   * <pre>
   *第几次计算结果
   * </pre>
   *
   * <code>int32 index = 8;</code>
   */
  public int getIndex() {
    return index_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (floatforce_ != 0D) {
      output.writeDouble(1, floatforce_);
    }
    if (floatxpos_ != 0D) {
      output.writeDouble(2, floatxpos_);
    }
    if (da_ != 0D) {
      output.writeDouble(3, da_);
    }
    if (dm_ != 0D) {
      output.writeDouble(4, dm_);
    }
    if (df_ != 0D) {
      output.writeDouble(5, df_);
    }
    if (biasf_ != 0D) {
      output.writeDouble(6, biasf_);
    }
    if (biasx_ != 0D) {
      output.writeDouble(7, biasx_);
    }
    if (index_ != 0) {
      output.writeInt32(8, index_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (floatforce_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, floatforce_);
    }
    if (floatxpos_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, floatxpos_);
    }
    if (da_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, da_);
    }
    if (dm_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(4, dm_);
    }
    if (df_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, df_);
    }
    if (biasf_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, biasf_);
    }
    if (biasx_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(7, biasx_);
    }
    if (index_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, index_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.iscas.biz.calculation.grpc.Buoyant)) {
      return super.equals(obj);
    }
    com.iscas.biz.calculation.grpc.Buoyant other = (com.iscas.biz.calculation.grpc.Buoyant) obj;

    boolean result = true;
    result = result && (
        java.lang.Double.doubleToLongBits(getFloatforce())
        == java.lang.Double.doubleToLongBits(
            other.getFloatforce()));
    result = result && (
        java.lang.Double.doubleToLongBits(getFloatxpos())
        == java.lang.Double.doubleToLongBits(
            other.getFloatxpos()));
    result = result && (
        java.lang.Double.doubleToLongBits(getDa())
        == java.lang.Double.doubleToLongBits(
            other.getDa()));
    result = result && (
        java.lang.Double.doubleToLongBits(getDm())
        == java.lang.Double.doubleToLongBits(
            other.getDm()));
    result = result && (
        java.lang.Double.doubleToLongBits(getDf())
        == java.lang.Double.doubleToLongBits(
            other.getDf()));
    result = result && (
        java.lang.Double.doubleToLongBits(getBiasf())
        == java.lang.Double.doubleToLongBits(
            other.getBiasf()));
    result = result && (
        java.lang.Double.doubleToLongBits(getBiasx())
        == java.lang.Double.doubleToLongBits(
            other.getBiasx()));
    result = result && (getIndex()
        == other.getIndex());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FLOATFORCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getFloatforce()));
    hash = (37 * hash) + FLOATXPOS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getFloatxpos()));
    hash = (37 * hash) + DA_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getDa()));
    hash = (37 * hash) + DM_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getDm()));
    hash = (37 * hash) + DF_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getDf()));
    hash = (37 * hash) + BIASF_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getBiasf()));
    hash = (37 * hash) + BIASX_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getBiasx()));
    hash = (37 * hash) + INDEX_FIELD_NUMBER;
    hash = (53 * hash) + getIndex();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.iscas.biz.calculation.grpc.Buoyant parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.iscas.biz.calculation.grpc.Buoyant parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.iscas.biz.calculation.grpc.Buoyant parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.iscas.biz.calculation.grpc.Buoyant parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.iscas.biz.calculation.grpc.Buoyant parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.iscas.biz.calculation.grpc.Buoyant parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.iscas.biz.calculation.grpc.Buoyant parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.iscas.biz.calculation.grpc.Buoyant parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.iscas.biz.calculation.grpc.Buoyant parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.iscas.biz.calculation.grpc.Buoyant parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.iscas.biz.calculation.grpc.Buoyant prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.iscas.biz.calculation.grpc.Buoyant}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.iscas.biz.calculation.grpc.Buoyant)
      com.iscas.biz.calculation.grpc.BuoyantOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.iscas.biz.calculation.grpc.CalculationProto.internal_static_com_iscas_biz_calculation_grpc_Buoyant_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.iscas.biz.calculation.grpc.CalculationProto.internal_static_com_iscas_biz_calculation_grpc_Buoyant_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.iscas.biz.calculation.grpc.Buoyant.class, com.iscas.biz.calculation.grpc.Buoyant.Builder.class);
    }

    // Construct using com.iscas.biz.calculation.grpc.Buoyant.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      floatforce_ = 0D;

      floatxpos_ = 0D;

      da_ = 0D;

      dm_ = 0D;

      df_ = 0D;

      biasf_ = 0D;

      biasx_ = 0D;

      index_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.iscas.biz.calculation.grpc.CalculationProto.internal_static_com_iscas_biz_calculation_grpc_Buoyant_descriptor;
    }

    public com.iscas.biz.calculation.grpc.Buoyant getDefaultInstanceForType() {
      return com.iscas.biz.calculation.grpc.Buoyant.getDefaultInstance();
    }

    public com.iscas.biz.calculation.grpc.Buoyant build() {
      com.iscas.biz.calculation.grpc.Buoyant result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.iscas.biz.calculation.grpc.Buoyant buildPartial() {
      com.iscas.biz.calculation.grpc.Buoyant result = new com.iscas.biz.calculation.grpc.Buoyant(this);
      result.floatforce_ = floatforce_;
      result.floatxpos_ = floatxpos_;
      result.da_ = da_;
      result.dm_ = dm_;
      result.df_ = df_;
      result.biasf_ = biasf_;
      result.biasx_ = biasx_;
      result.index_ = index_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.iscas.biz.calculation.grpc.Buoyant) {
        return mergeFrom((com.iscas.biz.calculation.grpc.Buoyant)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.iscas.biz.calculation.grpc.Buoyant other) {
      if (other == com.iscas.biz.calculation.grpc.Buoyant.getDefaultInstance()) return this;
      if (other.getFloatforce() != 0D) {
        setFloatforce(other.getFloatforce());
      }
      if (other.getFloatxpos() != 0D) {
        setFloatxpos(other.getFloatxpos());
      }
      if (other.getDa() != 0D) {
        setDa(other.getDa());
      }
      if (other.getDm() != 0D) {
        setDm(other.getDm());
      }
      if (other.getDf() != 0D) {
        setDf(other.getDf());
      }
      if (other.getBiasf() != 0D) {
        setBiasf(other.getBiasf());
      }
      if (other.getBiasx() != 0D) {
        setBiasx(other.getBiasx());
      }
      if (other.getIndex() != 0) {
        setIndex(other.getIndex());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.iscas.biz.calculation.grpc.Buoyant parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.iscas.biz.calculation.grpc.Buoyant) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private double floatforce_ ;
    /**
     * <pre>
     *浮力
     * </pre>
     *
     * <code>double floatforce = 1;</code>
     */
    public double getFloatforce() {
      return floatforce_;
    }
    /**
     * <pre>
     *浮力
     * </pre>
     *
     * <code>double floatforce = 1;</code>
     */
    public Builder setFloatforce(double value) {
      
      floatforce_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *浮力
     * </pre>
     *
     * <code>double floatforce = 1;</code>
     */
    public Builder clearFloatforce() {
      
      floatforce_ = 0D;
      onChanged();
      return this;
    }

    private double floatxpos_ ;
    /**
     * <pre>
     *浮力位置
     * </pre>
     *
     * <code>double floatxpos = 2;</code>
     */
    public double getFloatxpos() {
      return floatxpos_;
    }
    /**
     * <pre>
     *浮力位置
     * </pre>
     *
     * <code>double floatxpos = 2;</code>
     */
    public Builder setFloatxpos(double value) {
      
      floatxpos_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *浮力位置
     * </pre>
     *
     * <code>double floatxpos = 2;</code>
     */
    public Builder clearFloatxpos() {
      
      floatxpos_ = 0D;
      onChanged();
      return this;
    }

    private double da_ ;
    /**
     * <pre>
     *船尾吃水
     * </pre>
     *
     * <code>double da = 3;</code>
     */
    public double getDa() {
      return da_;
    }
    /**
     * <pre>
     *船尾吃水
     * </pre>
     *
     * <code>double da = 3;</code>
     */
    public Builder setDa(double value) {
      
      da_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *船尾吃水
     * </pre>
     *
     * <code>double da = 3;</code>
     */
    public Builder clearDa() {
      
      da_ = 0D;
      onChanged();
      return this;
    }

    private double dm_ ;
    /**
     * <pre>
     *船中吃水
     * </pre>
     *
     * <code>double dm = 4;</code>
     */
    public double getDm() {
      return dm_;
    }
    /**
     * <pre>
     *船中吃水
     * </pre>
     *
     * <code>double dm = 4;</code>
     */
    public Builder setDm(double value) {
      
      dm_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *船中吃水
     * </pre>
     *
     * <code>double dm = 4;</code>
     */
    public Builder clearDm() {
      
      dm_ = 0D;
      onChanged();
      return this;
    }

    private double df_ ;
    /**
     * <pre>
     *船首吃水
     * </pre>
     *
     * <code>double df = 5;</code>
     */
    public double getDf() {
      return df_;
    }
    /**
     * <pre>
     *船首吃水
     * </pre>
     *
     * <code>double df = 5;</code>
     */
    public Builder setDf(double value) {
      
      df_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *船首吃水
     * </pre>
     *
     * <code>double df = 5;</code>
     */
    public Builder clearDf() {
      
      df_ = 0D;
      onChanged();
      return this;
    }

    private double biasf_ ;
    /**
     * <pre>
     *浮力偏差 重量平衡精度
     * </pre>
     *
     * <code>double biasf = 6;</code>
     */
    public double getBiasf() {
      return biasf_;
    }
    /**
     * <pre>
     *浮力偏差 重量平衡精度
     * </pre>
     *
     * <code>double biasf = 6;</code>
     */
    public Builder setBiasf(double value) {
      
      biasf_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *浮力偏差 重量平衡精度
     * </pre>
     *
     * <code>double biasf = 6;</code>
     */
    public Builder clearBiasf() {
      
      biasf_ = 0D;
      onChanged();
      return this;
    }

    private double biasx_ ;
    /**
     * <pre>
     *浮力位置偏差 重心平衡精度
     * </pre>
     *
     * <code>double biasx = 7;</code>
     */
    public double getBiasx() {
      return biasx_;
    }
    /**
     * <pre>
     *浮力位置偏差 重心平衡精度
     * </pre>
     *
     * <code>double biasx = 7;</code>
     */
    public Builder setBiasx(double value) {
      
      biasx_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *浮力位置偏差 重心平衡精度
     * </pre>
     *
     * <code>double biasx = 7;</code>
     */
    public Builder clearBiasx() {
      
      biasx_ = 0D;
      onChanged();
      return this;
    }

    private int index_ ;
    /**
     * <pre>
     *第几次计算结果
     * </pre>
     *
     * <code>int32 index = 8;</code>
     */
    public int getIndex() {
      return index_;
    }
    /**
     * <pre>
     *第几次计算结果
     * </pre>
     *
     * <code>int32 index = 8;</code>
     */
    public Builder setIndex(int value) {
      
      index_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *第几次计算结果
     * </pre>
     *
     * <code>int32 index = 8;</code>
     */
    public Builder clearIndex() {
      
      index_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:com.iscas.biz.calculation.grpc.Buoyant)
  }

  // @@protoc_insertion_point(class_scope:com.iscas.biz.calculation.grpc.Buoyant)
  private static final com.iscas.biz.calculation.grpc.Buoyant DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.iscas.biz.calculation.grpc.Buoyant();
  }

  public static com.iscas.biz.calculation.grpc.Buoyant getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Buoyant>
      PARSER = new com.google.protobuf.AbstractParser<Buoyant>() {
    public Buoyant parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Buoyant(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Buoyant> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Buoyant> getParserForType() {
    return PARSER;
  }

  public com.iscas.biz.calculation.grpc.Buoyant getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

