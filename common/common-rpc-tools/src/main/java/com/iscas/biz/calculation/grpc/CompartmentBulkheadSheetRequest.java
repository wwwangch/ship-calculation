// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calculation.proto

package com.iscas.biz.calculation.grpc;

/**
 * Protobuf type {@code com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest}
 */
public  final class CompartmentBulkheadSheetRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest)
    CompartmentBulkheadSheetRequestOrBuilder {
  // Use CompartmentBulkheadSheetRequest.newBuilder() to construct.
  private CompartmentBulkheadSheetRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CompartmentBulkheadSheetRequest() {
    airguanyatou_ = 0D;
    deckHeight_ = java.util.Collections.emptyList();
    boolLiquidTank_ = java.util.Collections.emptyList();
    banWidth_ = java.util.Collections.emptyList();
    banThick_ = java.util.Collections.emptyList();
    cangbiBancailiao_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private CompartmentBulkheadSheetRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 9: {

            airguanyatou_ = input.readDouble();
            break;
          }
          case 17: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              deckHeight_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000002;
            }
            deckHeight_.add(input.readDouble());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
              deckHeight_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              deckHeight_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 24: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              boolLiquidTank_ = new java.util.ArrayList<java.lang.Boolean>();
              mutable_bitField0_ |= 0x00000004;
            }
            boolLiquidTank_.add(input.readBool());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
              boolLiquidTank_ = new java.util.ArrayList<java.lang.Boolean>();
              mutable_bitField0_ |= 0x00000004;
            }
            while (input.getBytesUntilLimit() > 0) {
              boolLiquidTank_.add(input.readBool());
            }
            input.popLimit(limit);
            break;
          }
          case 33: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              banWidth_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000008;
            }
            banWidth_.add(input.readDouble());
            break;
          }
          case 34: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
              banWidth_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000008;
            }
            while (input.getBytesUntilLimit() > 0) {
              banWidth_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 41: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              banThick_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000010;
            }
            banThick_.add(input.readDouble());
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
              banThick_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000010;
            }
            while (input.getBytesUntilLimit() > 0) {
              banThick_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 49: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              cangbiBancailiao_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000020;
            }
            cangbiBancailiao_.add(input.readDouble());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
              cangbiBancailiao_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000020;
            }
            while (input.getBytesUntilLimit() > 0) {
              cangbiBancailiao_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        deckHeight_ = java.util.Collections.unmodifiableList(deckHeight_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        boolLiquidTank_ = java.util.Collections.unmodifiableList(boolLiquidTank_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        banWidth_ = java.util.Collections.unmodifiableList(banWidth_);
      }
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        banThick_ = java.util.Collections.unmodifiableList(banThick_);
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        cangbiBancailiao_ = java.util.Collections.unmodifiableList(cangbiBancailiao_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.iscas.biz.calculation.grpc.CalculationProto.internal_static_com_iscas_biz_calculation_grpc_CompartmentBulkheadSheetRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.iscas.biz.calculation.grpc.CalculationProto.internal_static_com_iscas_biz_calculation_grpc_CompartmentBulkheadSheetRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest.class, com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest.Builder.class);
  }

  private int bitField0_;
  public static final int AIRGUANYATOU_FIELD_NUMBER = 1;
  private double airguanyatou_;
  /**
   * <pre>
   *液仓空气管压头
   * </pre>
   *
   * <code>double airguanyatou = 1;</code>
   */
  public double getAirguanyatou() {
    return airguanyatou_;
  }

  public static final int DECKHEIGHT_FIELD_NUMBER = 2;
  private java.util.List<java.lang.Double> deckHeight_;
  /**
   * <pre>
   *甲板层高 区间excel中的数据
   * </pre>
   *
   * <code>repeated double deckHeight = 2;</code>
   */
  public java.util.List<java.lang.Double>
      getDeckHeightList() {
    return deckHeight_;
  }
  /**
   * <pre>
   *甲板层高 区间excel中的数据
   * </pre>
   *
   * <code>repeated double deckHeight = 2;</code>
   */
  public int getDeckHeightCount() {
    return deckHeight_.size();
  }
  /**
   * <pre>
   *甲板层高 区间excel中的数据
   * </pre>
   *
   * <code>repeated double deckHeight = 2;</code>
   */
  public double getDeckHeight(int index) {
    return deckHeight_.get(index);
  }
  private int deckHeightMemoizedSerializedSize = -1;

  public static final int BOOLLIQUIDTANK_FIELD_NUMBER = 3;
  private java.util.List<java.lang.Boolean> boolLiquidTank_;
  /**
   * <pre>
   *是否液压舱壁  区间excel中的数据
   * </pre>
   *
   * <code>repeated bool boolLiquidTank = 3;</code>
   */
  public java.util.List<java.lang.Boolean>
      getBoolLiquidTankList() {
    return boolLiquidTank_;
  }
  /**
   * <pre>
   *是否液压舱壁  区间excel中的数据
   * </pre>
   *
   * <code>repeated bool boolLiquidTank = 3;</code>
   */
  public int getBoolLiquidTankCount() {
    return boolLiquidTank_.size();
  }
  /**
   * <pre>
   *是否液压舱壁  区间excel中的数据
   * </pre>
   *
   * <code>repeated bool boolLiquidTank = 3;</code>
   */
  public boolean getBoolLiquidTank(int index) {
    return boolLiquidTank_.get(index);
  }
  private int boolLiquidTankMemoizedSerializedSize = -1;

  public static final int BANWIDTH_FIELD_NUMBER = 4;
  private java.util.List<java.lang.Double> banWidth_;
  /**
   * <pre>
   *板宽 区间excel中的数据
   * </pre>
   *
   * <code>repeated double banWidth = 4;</code>
   */
  public java.util.List<java.lang.Double>
      getBanWidthList() {
    return banWidth_;
  }
  /**
   * <pre>
   *板宽 区间excel中的数据
   * </pre>
   *
   * <code>repeated double banWidth = 4;</code>
   */
  public int getBanWidthCount() {
    return banWidth_.size();
  }
  /**
   * <pre>
   *板宽 区间excel中的数据
   * </pre>
   *
   * <code>repeated double banWidth = 4;</code>
   */
  public double getBanWidth(int index) {
    return banWidth_.get(index);
  }
  private int banWidthMemoizedSerializedSize = -1;

  public static final int BANTHICK_FIELD_NUMBER = 5;
  private java.util.List<java.lang.Double> banThick_;
  /**
   * <pre>
   *板厚 区间excel中的数据
   * </pre>
   *
   * <code>repeated double banThick = 5;</code>
   */
  public java.util.List<java.lang.Double>
      getBanThickList() {
    return banThick_;
  }
  /**
   * <pre>
   *板厚 区间excel中的数据
   * </pre>
   *
   * <code>repeated double banThick = 5;</code>
   */
  public int getBanThickCount() {
    return banThick_.size();
  }
  /**
   * <pre>
   *板厚 区间excel中的数据
   * </pre>
   *
   * <code>repeated double banThick = 5;</code>
   */
  public double getBanThick(int index) {
    return banThick_.get(index);
  }
  private int banThickMemoizedSerializedSize = -1;

  public static final int CANGBIBANCAILIAO_FIELD_NUMBER = 6;
  private java.util.List<java.lang.Double> cangbiBancailiao_;
  /**
   * <pre>
   *舱壁板材料
   * </pre>
   *
   * <code>repeated double cangbiBancailiao = 6;</code>
   */
  public java.util.List<java.lang.Double>
      getCangbiBancailiaoList() {
    return cangbiBancailiao_;
  }
  /**
   * <pre>
   *舱壁板材料
   * </pre>
   *
   * <code>repeated double cangbiBancailiao = 6;</code>
   */
  public int getCangbiBancailiaoCount() {
    return cangbiBancailiao_.size();
  }
  /**
   * <pre>
   *舱壁板材料
   * </pre>
   *
   * <code>repeated double cangbiBancailiao = 6;</code>
   */
  public double getCangbiBancailiao(int index) {
    return cangbiBancailiao_.get(index);
  }
  private int cangbiBancailiaoMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (airguanyatou_ != 0D) {
      output.writeDouble(1, airguanyatou_);
    }
    if (getDeckHeightList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(deckHeightMemoizedSerializedSize);
    }
    for (int i = 0; i < deckHeight_.size(); i++) {
      output.writeDoubleNoTag(deckHeight_.get(i));
    }
    if (getBoolLiquidTankList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(boolLiquidTankMemoizedSerializedSize);
    }
    for (int i = 0; i < boolLiquidTank_.size(); i++) {
      output.writeBoolNoTag(boolLiquidTank_.get(i));
    }
    if (getBanWidthList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(banWidthMemoizedSerializedSize);
    }
    for (int i = 0; i < banWidth_.size(); i++) {
      output.writeDoubleNoTag(banWidth_.get(i));
    }
    if (getBanThickList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(banThickMemoizedSerializedSize);
    }
    for (int i = 0; i < banThick_.size(); i++) {
      output.writeDoubleNoTag(banThick_.get(i));
    }
    if (getCangbiBancailiaoList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(cangbiBancailiaoMemoizedSerializedSize);
    }
    for (int i = 0; i < cangbiBancailiao_.size(); i++) {
      output.writeDoubleNoTag(cangbiBancailiao_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (airguanyatou_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, airguanyatou_);
    }
    {
      int dataSize = 0;
      dataSize = 8 * getDeckHeightList().size();
      size += dataSize;
      if (!getDeckHeightList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      deckHeightMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 1 * getBoolLiquidTankList().size();
      size += dataSize;
      if (!getBoolLiquidTankList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      boolLiquidTankMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getBanWidthList().size();
      size += dataSize;
      if (!getBanWidthList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      banWidthMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getBanThickList().size();
      size += dataSize;
      if (!getBanThickList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      banThickMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getCangbiBancailiaoList().size();
      size += dataSize;
      if (!getCangbiBancailiaoList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      cangbiBancailiaoMemoizedSerializedSize = dataSize;
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest)) {
      return super.equals(obj);
    }
    com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest other = (com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest) obj;

    boolean result = true;
    result = result && (
        java.lang.Double.doubleToLongBits(getAirguanyatou())
        == java.lang.Double.doubleToLongBits(
            other.getAirguanyatou()));
    result = result && getDeckHeightList()
        .equals(other.getDeckHeightList());
    result = result && getBoolLiquidTankList()
        .equals(other.getBoolLiquidTankList());
    result = result && getBanWidthList()
        .equals(other.getBanWidthList());
    result = result && getBanThickList()
        .equals(other.getBanThickList());
    result = result && getCangbiBancailiaoList()
        .equals(other.getCangbiBancailiaoList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + AIRGUANYATOU_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getAirguanyatou()));
    if (getDeckHeightCount() > 0) {
      hash = (37 * hash) + DECKHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getDeckHeightList().hashCode();
    }
    if (getBoolLiquidTankCount() > 0) {
      hash = (37 * hash) + BOOLLIQUIDTANK_FIELD_NUMBER;
      hash = (53 * hash) + getBoolLiquidTankList().hashCode();
    }
    if (getBanWidthCount() > 0) {
      hash = (37 * hash) + BANWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getBanWidthList().hashCode();
    }
    if (getBanThickCount() > 0) {
      hash = (37 * hash) + BANTHICK_FIELD_NUMBER;
      hash = (53 * hash) + getBanThickList().hashCode();
    }
    if (getCangbiBancailiaoCount() > 0) {
      hash = (37 * hash) + CANGBIBANCAILIAO_FIELD_NUMBER;
      hash = (53 * hash) + getCangbiBancailiaoList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest)
      com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.iscas.biz.calculation.grpc.CalculationProto.internal_static_com_iscas_biz_calculation_grpc_CompartmentBulkheadSheetRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.iscas.biz.calculation.grpc.CalculationProto.internal_static_com_iscas_biz_calculation_grpc_CompartmentBulkheadSheetRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest.class, com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest.Builder.class);
    }

    // Construct using com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      airguanyatou_ = 0D;

      deckHeight_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      boolLiquidTank_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      banWidth_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      banThick_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      cangbiBancailiao_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.iscas.biz.calculation.grpc.CalculationProto.internal_static_com_iscas_biz_calculation_grpc_CompartmentBulkheadSheetRequest_descriptor;
    }

    public com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest getDefaultInstanceForType() {
      return com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest.getDefaultInstance();
    }

    public com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest build() {
      com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest buildPartial() {
      com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest result = new com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.airguanyatou_ = airguanyatou_;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        deckHeight_ = java.util.Collections.unmodifiableList(deckHeight_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.deckHeight_ = deckHeight_;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        boolLiquidTank_ = java.util.Collections.unmodifiableList(boolLiquidTank_);
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.boolLiquidTank_ = boolLiquidTank_;
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        banWidth_ = java.util.Collections.unmodifiableList(banWidth_);
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.banWidth_ = banWidth_;
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        banThick_ = java.util.Collections.unmodifiableList(banThick_);
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.banThick_ = banThick_;
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        cangbiBancailiao_ = java.util.Collections.unmodifiableList(cangbiBancailiao_);
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.cangbiBancailiao_ = cangbiBancailiao_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest) {
        return mergeFrom((com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest other) {
      if (other == com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest.getDefaultInstance()) return this;
      if (other.getAirguanyatou() != 0D) {
        setAirguanyatou(other.getAirguanyatou());
      }
      if (!other.deckHeight_.isEmpty()) {
        if (deckHeight_.isEmpty()) {
          deckHeight_ = other.deckHeight_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureDeckHeightIsMutable();
          deckHeight_.addAll(other.deckHeight_);
        }
        onChanged();
      }
      if (!other.boolLiquidTank_.isEmpty()) {
        if (boolLiquidTank_.isEmpty()) {
          boolLiquidTank_ = other.boolLiquidTank_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureBoolLiquidTankIsMutable();
          boolLiquidTank_.addAll(other.boolLiquidTank_);
        }
        onChanged();
      }
      if (!other.banWidth_.isEmpty()) {
        if (banWidth_.isEmpty()) {
          banWidth_ = other.banWidth_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureBanWidthIsMutable();
          banWidth_.addAll(other.banWidth_);
        }
        onChanged();
      }
      if (!other.banThick_.isEmpty()) {
        if (banThick_.isEmpty()) {
          banThick_ = other.banThick_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureBanThickIsMutable();
          banThick_.addAll(other.banThick_);
        }
        onChanged();
      }
      if (!other.cangbiBancailiao_.isEmpty()) {
        if (cangbiBancailiao_.isEmpty()) {
          cangbiBancailiao_ = other.cangbiBancailiao_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureCangbiBancailiaoIsMutable();
          cangbiBancailiao_.addAll(other.cangbiBancailiao_);
        }
        onChanged();
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private double airguanyatou_ ;
    /**
     * <pre>
     *液仓空气管压头
     * </pre>
     *
     * <code>double airguanyatou = 1;</code>
     */
    public double getAirguanyatou() {
      return airguanyatou_;
    }
    /**
     * <pre>
     *液仓空气管压头
     * </pre>
     *
     * <code>double airguanyatou = 1;</code>
     */
    public Builder setAirguanyatou(double value) {
      
      airguanyatou_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *液仓空气管压头
     * </pre>
     *
     * <code>double airguanyatou = 1;</code>
     */
    public Builder clearAirguanyatou() {
      
      airguanyatou_ = 0D;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> deckHeight_ = java.util.Collections.emptyList();
    private void ensureDeckHeightIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        deckHeight_ = new java.util.ArrayList<java.lang.Double>(deckHeight_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     *甲板层高 区间excel中的数据
     * </pre>
     *
     * <code>repeated double deckHeight = 2;</code>
     */
    public java.util.List<java.lang.Double>
        getDeckHeightList() {
      return java.util.Collections.unmodifiableList(deckHeight_);
    }
    /**
     * <pre>
     *甲板层高 区间excel中的数据
     * </pre>
     *
     * <code>repeated double deckHeight = 2;</code>
     */
    public int getDeckHeightCount() {
      return deckHeight_.size();
    }
    /**
     * <pre>
     *甲板层高 区间excel中的数据
     * </pre>
     *
     * <code>repeated double deckHeight = 2;</code>
     */
    public double getDeckHeight(int index) {
      return deckHeight_.get(index);
    }
    /**
     * <pre>
     *甲板层高 区间excel中的数据
     * </pre>
     *
     * <code>repeated double deckHeight = 2;</code>
     */
    public Builder setDeckHeight(
        int index, double value) {
      ensureDeckHeightIsMutable();
      deckHeight_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *甲板层高 区间excel中的数据
     * </pre>
     *
     * <code>repeated double deckHeight = 2;</code>
     */
    public Builder addDeckHeight(double value) {
      ensureDeckHeightIsMutable();
      deckHeight_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *甲板层高 区间excel中的数据
     * </pre>
     *
     * <code>repeated double deckHeight = 2;</code>
     */
    public Builder addAllDeckHeight(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureDeckHeightIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, deckHeight_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *甲板层高 区间excel中的数据
     * </pre>
     *
     * <code>repeated double deckHeight = 2;</code>
     */
    public Builder clearDeckHeight() {
      deckHeight_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Boolean> boolLiquidTank_ = java.util.Collections.emptyList();
    private void ensureBoolLiquidTankIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        boolLiquidTank_ = new java.util.ArrayList<java.lang.Boolean>(boolLiquidTank_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     *是否液压舱壁  区间excel中的数据
     * </pre>
     *
     * <code>repeated bool boolLiquidTank = 3;</code>
     */
    public java.util.List<java.lang.Boolean>
        getBoolLiquidTankList() {
      return java.util.Collections.unmodifiableList(boolLiquidTank_);
    }
    /**
     * <pre>
     *是否液压舱壁  区间excel中的数据
     * </pre>
     *
     * <code>repeated bool boolLiquidTank = 3;</code>
     */
    public int getBoolLiquidTankCount() {
      return boolLiquidTank_.size();
    }
    /**
     * <pre>
     *是否液压舱壁  区间excel中的数据
     * </pre>
     *
     * <code>repeated bool boolLiquidTank = 3;</code>
     */
    public boolean getBoolLiquidTank(int index) {
      return boolLiquidTank_.get(index);
    }
    /**
     * <pre>
     *是否液压舱壁  区间excel中的数据
     * </pre>
     *
     * <code>repeated bool boolLiquidTank = 3;</code>
     */
    public Builder setBoolLiquidTank(
        int index, boolean value) {
      ensureBoolLiquidTankIsMutable();
      boolLiquidTank_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否液压舱壁  区间excel中的数据
     * </pre>
     *
     * <code>repeated bool boolLiquidTank = 3;</code>
     */
    public Builder addBoolLiquidTank(boolean value) {
      ensureBoolLiquidTankIsMutable();
      boolLiquidTank_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否液压舱壁  区间excel中的数据
     * </pre>
     *
     * <code>repeated bool boolLiquidTank = 3;</code>
     */
    public Builder addAllBoolLiquidTank(
        java.lang.Iterable<? extends java.lang.Boolean> values) {
      ensureBoolLiquidTankIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, boolLiquidTank_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否液压舱壁  区间excel中的数据
     * </pre>
     *
     * <code>repeated bool boolLiquidTank = 3;</code>
     */
    public Builder clearBoolLiquidTank() {
      boolLiquidTank_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> banWidth_ = java.util.Collections.emptyList();
    private void ensureBanWidthIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        banWidth_ = new java.util.ArrayList<java.lang.Double>(banWidth_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <pre>
     *板宽 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banWidth = 4;</code>
     */
    public java.util.List<java.lang.Double>
        getBanWidthList() {
      return java.util.Collections.unmodifiableList(banWidth_);
    }
    /**
     * <pre>
     *板宽 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banWidth = 4;</code>
     */
    public int getBanWidthCount() {
      return banWidth_.size();
    }
    /**
     * <pre>
     *板宽 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banWidth = 4;</code>
     */
    public double getBanWidth(int index) {
      return banWidth_.get(index);
    }
    /**
     * <pre>
     *板宽 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banWidth = 4;</code>
     */
    public Builder setBanWidth(
        int index, double value) {
      ensureBanWidthIsMutable();
      banWidth_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *板宽 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banWidth = 4;</code>
     */
    public Builder addBanWidth(double value) {
      ensureBanWidthIsMutable();
      banWidth_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *板宽 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banWidth = 4;</code>
     */
    public Builder addAllBanWidth(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureBanWidthIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, banWidth_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *板宽 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banWidth = 4;</code>
     */
    public Builder clearBanWidth() {
      banWidth_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> banThick_ = java.util.Collections.emptyList();
    private void ensureBanThickIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        banThick_ = new java.util.ArrayList<java.lang.Double>(banThick_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     *板厚 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banThick = 5;</code>
     */
    public java.util.List<java.lang.Double>
        getBanThickList() {
      return java.util.Collections.unmodifiableList(banThick_);
    }
    /**
     * <pre>
     *板厚 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banThick = 5;</code>
     */
    public int getBanThickCount() {
      return banThick_.size();
    }
    /**
     * <pre>
     *板厚 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banThick = 5;</code>
     */
    public double getBanThick(int index) {
      return banThick_.get(index);
    }
    /**
     * <pre>
     *板厚 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banThick = 5;</code>
     */
    public Builder setBanThick(
        int index, double value) {
      ensureBanThickIsMutable();
      banThick_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *板厚 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banThick = 5;</code>
     */
    public Builder addBanThick(double value) {
      ensureBanThickIsMutable();
      banThick_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *板厚 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banThick = 5;</code>
     */
    public Builder addAllBanThick(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureBanThickIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, banThick_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *板厚 区间excel中的数据
     * </pre>
     *
     * <code>repeated double banThick = 5;</code>
     */
    public Builder clearBanThick() {
      banThick_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> cangbiBancailiao_ = java.util.Collections.emptyList();
    private void ensureCangbiBancailiaoIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        cangbiBancailiao_ = new java.util.ArrayList<java.lang.Double>(cangbiBancailiao_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <pre>
     *舱壁板材料
     * </pre>
     *
     * <code>repeated double cangbiBancailiao = 6;</code>
     */
    public java.util.List<java.lang.Double>
        getCangbiBancailiaoList() {
      return java.util.Collections.unmodifiableList(cangbiBancailiao_);
    }
    /**
     * <pre>
     *舱壁板材料
     * </pre>
     *
     * <code>repeated double cangbiBancailiao = 6;</code>
     */
    public int getCangbiBancailiaoCount() {
      return cangbiBancailiao_.size();
    }
    /**
     * <pre>
     *舱壁板材料
     * </pre>
     *
     * <code>repeated double cangbiBancailiao = 6;</code>
     */
    public double getCangbiBancailiao(int index) {
      return cangbiBancailiao_.get(index);
    }
    /**
     * <pre>
     *舱壁板材料
     * </pre>
     *
     * <code>repeated double cangbiBancailiao = 6;</code>
     */
    public Builder setCangbiBancailiao(
        int index, double value) {
      ensureCangbiBancailiaoIsMutable();
      cangbiBancailiao_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *舱壁板材料
     * </pre>
     *
     * <code>repeated double cangbiBancailiao = 6;</code>
     */
    public Builder addCangbiBancailiao(double value) {
      ensureCangbiBancailiaoIsMutable();
      cangbiBancailiao_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *舱壁板材料
     * </pre>
     *
     * <code>repeated double cangbiBancailiao = 6;</code>
     */
    public Builder addAllCangbiBancailiao(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureCangbiBancailiaoIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, cangbiBancailiao_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *舱壁板材料
     * </pre>
     *
     * <code>repeated double cangbiBancailiao = 6;</code>
     */
    public Builder clearCangbiBancailiao() {
      cangbiBancailiao_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest)
  }

  // @@protoc_insertion_point(class_scope:com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest)
  private static final com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest();
  }

  public static com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CompartmentBulkheadSheetRequest>
      PARSER = new com.google.protobuf.AbstractParser<CompartmentBulkheadSheetRequest>() {
    public CompartmentBulkheadSheetRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new CompartmentBulkheadSheetRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CompartmentBulkheadSheetRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CompartmentBulkheadSheetRequest> getParserForType() {
    return PARSER;
  }

  public com.iscas.biz.calculation.grpc.CompartmentBulkheadSheetRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

